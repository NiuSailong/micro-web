export let columnAll = [
  {
    colName: '工作内容',
    colType: 'select',
    dataIndex: 'type',
    edit: true,
    placeholder: '',
    width: 160,
    tip: true,
  },
  {
    colName: '人数',
    colType: 'input',
    dataIndex: 'personNumber',
    placeholder: '',
    width: 130,
    verificationType: 'number',
    minnumber: 1,
    message: '人数不能小于1且不能为小数',
    tip: true,
  },
  {
    colName: '标准工时(h)',
    colType: 'input',
    dataIndex: 'stdhhours',
    placeholder: '',
    verificationType: 'number',
    width: 160,
    message: '输入的数值应为大于0的正整数',
    tip: true,
  },
  {
    colName: '标准费用(元)',
    colType: 'input',
    dataIndex: 'stdcosts',
    placeholder: '',
    verificationType: 'numberPos',
    minnumber: 1,
    message: '输入的数值应为正数',
    width: 160,
    tip: true,
  },
  {
    colName: '派发类型',
    colType: 'select',
    dataIndex: 'workType',
    placeholder: '',
    width: 140,
    tip: true,
  },
  {
    colName: '工单编号前缀',
    colType: 'input',
    dataIndex: 'prefix',
    placeholder: '',
    MaxLength: 10,
    message: '工单编号前缀长度不能大于10',
    width: 160,
    tip: true,
  },
  {
    colName: '修改配置信息',
    colType: 'select',
    dataIndex: 'flag',
    placeholder: '',
    width: 130,
    tips: true,
    tipNews: '指该项工作是否允许在发单时通过填写人数及工时确定工单费用',
    tip: true,
  },
  {
    colName: '按标准人数计费',
    colType: 'select',
    dataIndex: 'strict',
    placeholder: '',
    width: 140,
    tips: true,
    tipNews:
      '指该项工作在大群软件内实际参与工作的风光侠（接单人+工作搭档）和标准人数不一致时，在结算工单费用时是否按实际人数计算工费用。例如：标准人数为4人，工单总费用为1000元，但实际工单人数为2人（接单人+1个工作伙伴），如选择了按标准人数结算则该工单是实际结算费用为(2/5)*1000=400。如选择不按标准人数结算则该工单是实际结算费用为1000元。',
    tip: true,
  },
];

export let columnPlan = [
  {
    colName: '序号',
    colType: 'text',
    dataIndex: 'linenum',
    disable: true,
    edit: true,
    placeholder: '自动生成',
    width: 100,
    tip: false,
  },
  {
    colName: '故障编号',
    colType: 'input',
    dataIndex: 'faultCode',
    edit: true,
    placeholder: '',
    width: 160,
    tip: true,
    suffix: true,
  },
  {
    colName: '故障名称',
    colType: 'changetext',
    dataIndex: 'faultName',
    disable: true,
    edit: true,
    placeholder: '根据故障编号自动生成',
    width: 250,
    tip: false,
  },
  {
    colName: '标准工时(h)',
    colType: 'input',
    dataIndex: 'stdhhours',
    placeholder: '',
    verificationType: 'floats',
    width: 160,
    message: '输入的数值应为大于0的正数或小数(小数点后一位)',
    tip: true,
  },
  {
    colName: '标准费用(元)',
    colType: 'input',
    dataIndex: 'stdcosts',
    placeholder: '',
    verificationType: 'float',
    minnumber: 1,
    message: '输入的数值应为大于0的正数或小数(小数点后两位)',
    width: 170,
    tip: true,
  },
  {
    colName: '派发类型',
    colType: 'select',
    dataIndex: 'workType',
    placeholder: '',
    width: 150,
    tip: true,
  },
  {
    colName: '是否需要管家确认',
    colType: 'select',
    dataIndex: 'confirm',
    placeholder: '',
    width: 150,
    tip: true,
  },
];

const TableTitle = [
  {
    title: '故障编号',
    dataIndex: 'faultCode',
    sorter: true,
    showSorterTooltip: false,
    width: 200,
    ellipsis: true,
  },
  {
    title: '故障名称',
    dataIndex: 'faultName',
    sorter: true,
    showSorterTooltip: false,
    width: 200,
    ellipsis: true,
  },
];

export const fiflter = function (sorter) {
  let arr = [];
  TableTitle.forEach((item) => {
    arr.push({
      ...item,
      sortOrder: sorter.type == item.dataIndex ? sorter.value : false,
    });
  });
  return arr;
};
